package com.example.compose
import androidx.compose.ui.graphics.Color

// Light Theme Colors
val primaryLight = Color(0xFFFF9800) // Orange
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFFFB74D) // Lighter shade of orange
val onPrimaryContainerLight = Color(0xFF000000)
val secondaryLight = Color(0xFF2196F3) // Blue
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFF64B5F6) // Lighter shade of blue
val onSecondaryContainerLight = Color(0xFF000000)
val tertiaryLight = Color(0xFFFFE0B2)
val onTertiaryLight = Color(0xFF212121)
val tertiaryContainerLight = Color(0xFFFFCC80)
val onTertiaryContainerLight = Color(0xFF212121)
val errorLight = Color(0xFFD32F2F)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFC62828)
val onErrorContainerLight = Color(0xFFFFFFFF)
val backgroundLight = Color(0xFFFFF3E0)
val onBackgroundLight = Color(0xFF3E2723)
val surfaceLight = Color(0xFFFFE0B2)
val onSurfaceLight = Color(0xFF3E2723)
val surfaceVariantLight = Color(0xFFFFE0B2)
val onSurfaceVariantLight = Color(0xFF3E2723)
val outlineLight = Color(0xFFBCAAA4)
val outlineVariantLight = Color(0xFFBCAAA4)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF3E2723)
val inverseOnSurfaceLight = Color(0xFFFFF3E0)
val inversePrimaryLight = Color(0xFFFFB74D)
val surfaceDimLight = Color(0xFFFFE0B2)
val surfaceBrightLight = Color(0xFF3E2723)
val surfaceContainerLowestLight = Color(0xFFFFE0B2)
val surfaceContainerLowLight = Color(0xFFFFE0B2)
val surfaceContainerLight = Color(0xFFFFCC80)
val surfaceContainerHighLight = Color(0xFFFFAB91)
val surfaceContainerHighestLight = Color(0xFFFF9800)

// Medium Contrast Light Theme Colors
val primaryLightMediumContrast = Color(0xFF4A3971)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF7D6BA6)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF003D9C)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF0061A7)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF5F3743)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF976775)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFEF7FF)
val onBackgroundLightMediumContrast = Color(0xFF1D1B20)
val surfaceLightMediumContrast = Color(0xFFFEF7FF)
val onSurfaceLightMediumContrast = Color(0xFF1D1B20)
val surfaceVariantLightMediumContrast = Color(0xFFE7E0EB)
val onSurfaceVariantLightMediumContrast = Color(0xFF45414A)
val outlineLightMediumContrast = Color(0xFF615D67)
val outlineVariantLightMediumContrast = Color(0xFF7E7983)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF322F35)
val inverseOnSurfaceLightMediumContrast = Color(0xFFF5EFF7)
val inversePrimaryLightMediumContrast = Color(0xFFD1BCFE)
val surfaceDimLightMediumContrast = Color(0xFFDED8E0)
val surfaceBrightLightMediumContrast = Color(0xFFFEF7FF)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF8F1FA)
val surfaceContainerLightMediumContrast = Color(0xFFF2ECF4)
val surfaceContainerHighLightMediumContrast = Color(0xFFECE6EE)
val surfaceContainerHighestLightMediumContrast = Color(0xFFE6E0E8)

// High Contrast Light Theme Colors
val primaryLightHighContrast = Color(0xFF28174E)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF4A3971)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF003D9C)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF004BA0)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF391723)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF5F3743)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFEF7FF)
val onBackgroundLightHighContrast = Color(0xFF1D1B20)
val surfaceLightHighContrast = Color(0xFFFEF7FF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFE7E0EB)
val onSurfaceVariantLightHighContrast = Color(0xFF25232B)
val outlineLightHighContrast = Color(0xFF45414A)
val outlineVariantLightHighContrast = Color(0xFF45414A)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF322F35)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFF2E8FF)
val surfaceDimLightHighContrast = Color(0xFFDED8E0)
val surfaceBrightLightHighContrast = Color(0xFFFEF7FF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF8F1FA)
val surfaceContainerLightHighContrast = Color(0xFFF2ECF4)
val surfaceContainerHighLightHighContrast = Color(0xFFECE6EE)
val surfaceContainerHighestLightHighContrast = Color(0xFFE6E0E8)

// Dark Theme Colors
val primaryDark = Color(0xFFB95B1B) // Orange
val onPrimaryDark = Color(0xFFFFFFFF)
val primaryContainerDark = Color(0xFFD87D3F) // Darker shade of orange
val onPrimaryContainerDark = Color(0xFFFFFFFF)
val secondaryDark = Color(0xFF2196F3) // Blue
val onSecondaryDark = Color(0xFFFFFFFF)
val secondaryContainerDark = Color(0xFF4A6FA5)
val onSecondaryContainerDark = Color(0xFFFFFFFF)
val tertiaryDark = Color(0xFFFFC107)
val onTertiaryDark = Color(0xFF212121)
val tertiaryContainerDark = Color(0xFFFFB300)
val onTertiaryContainerDark = Color(0xFF212121)
val errorDark = Color(0xFFD32F2F)
val onErrorDark = Color(0xFFFFFFFF)
val errorContainerDark = Color(0xFFC62828)
val onErrorContainerDark = Color(0xFFFFFFFF)
val backgroundDark = Color(0xFF121212) // Very dark gray
val onBackgroundDark = Color(0xFFE0E0E0)
val surfaceDark = Color(0xFF121212) // Very dark gray
val onSurfaceDark = Color(0xFFE0E0E0)
val surfaceVariantDark = Color(0xFF1F1F1F)
val onSurfaceVariantDark = Color(0xFFB0BEC5)
val outlineDark = Color(0xFF303030)
val outlineVariantDark = Color(0xFF424242)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE0E0E0)
val inverseOnSurfaceDark = Color(0xFF121212)
val inversePrimaryDark = Color(0xFFFFB74D)
val surfaceDimDark = Color(0xFF121212)
val surfaceBrightDark = Color(0xFF1F1F1F)
val surfaceContainerLowestDark = Color(0xFF121212)
val surfaceContainerLowDark = Color(0xFF1F1F1F)
val surfaceContainerDark = Color(0xFF303030)
val surfaceContainerHighDark = Color(0xFF424242)
val surfaceContainerHighestDark = Color(0xFF616161)

// Medium Contrast Dark Theme Colors
val primaryDarkMediumContrast = Color(0xFFFFB74D)
val onPrimaryDarkMediumContrast = Color(0xFF000000)
val primaryContainerDarkMediumContrast = Color(0xFFEF6C00)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFF1976D2)
val onSecondaryDarkMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerDarkMediumContrast = Color(0xFF004BA0)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFF4BCCB)
val onTertiaryDarkMediumContrast = Color(0xFF2B0B17)
val tertiaryContainerDarkMediumContrast = Color(0xFFB58391)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF141218)
val onBackgroundDarkMediumContrast = Color(0xFFE6E0E8)
val surfaceDarkMediumContrast = Color(0xFF141218)
val onSurfaceDarkMediumContrast = Color(0xFFFFF9FF)
val surfaceVariantDarkMediumContrast = Color(0xFF49454E)
val onSurfaceVariantDarkMediumContrast = Color(0xFFCFC8D3)
val outlineDarkMediumContrast = Color(0xFFA6A1AB)
val outlineVariantDarkMediumContrast = Color(0xFF86818B)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFE6E0E8)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF2B292F)
val inversePrimaryDarkMediumContrast = Color(0xFF4F3E76)
val surfaceDimDarkMediumContrast = Color(0xFF141218)
val surfaceBrightDarkMediumContrast = Color(0xFF3B383E)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0D13)
val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1B20)
val surfaceContainerDarkMediumContrast = Color(0xFF211F24)
val surfaceContainerHighDarkMediumContrast = Color(0xFF2B292F)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF36343A)

// High Contrast Dark Theme Colors
val primaryDarkHighContrast = Color(0xFFFFB74D)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFEF6C00)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFFF9FF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFF004BA0)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFF9F9)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFF4BCCB)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF141218)
val onBackgroundDarkHighContrast = Color(0xFFE6E0E8)
val surfaceDarkHighContrast = Color(0xFF141218)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF49454E)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFF9FF)
val outlineDarkHighContrast = Color(0xFFCFC8D3)
val outlineVariantDarkHighContrast = Color(0xFFCFC8D3)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE6E0E8)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF301F56)
val surfaceDimDarkHighContrast = Color(0xFF141218)
val surfaceBrightDarkHighContrast = Color(0xFF3B383E)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0F0D13)
val surfaceContainerLowDarkHighContrast = Color(0xFF1D1B20)
val surfaceContainerDarkHighContrast = Color(0xFF211F24)
val surfaceContainerHighDarkHighContrast = Color(0xFF2B292F)
val surfaceContainerHighestDarkHighContrast = Color(0xFF36343A)
